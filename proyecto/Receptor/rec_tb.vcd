$date
	Mon Jul  1 22:50:58 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_Receptor $end
$var wire 1 ! WR_STB $end
$var wire 16 " WR_DATA [15:0] $end
$var wire 1 # RESET $end
$var wire 16 $ RD_DATA [15:0] $end
$var wire 32 % MDIO_OUT [31:0] $end
$var wire 1 & MDIO_OE $end
$var wire 1 ' MDIO_IN $end
$var wire 1 ( MDIO_DONE $end
$var wire 1 ) MDC $end
$var wire 5 * ADDR [4:0] $end
$scope module prueba $end
$var wire 1 ! WR_STB $end
$var wire 16 + WR_DATA [15:0] $end
$var wire 1 ' MDIO_IN $end
$var wire 1 ( MDIO_DONE $end
$var wire 5 , ADDR [4:0] $end
$var reg 1 ) MDC $end
$var reg 1 & MDIO_OE $end
$var reg 32 - MDIO_OUT [31:0] $end
$var reg 16 . RD_DATA [15:0] $end
$var reg 1 # RESET $end
$upscope $end
$scope module receptor $end
$var wire 1 ) MDC $end
$var wire 1 & MDIO_OE $end
$var wire 32 / MDIO_OUT [31:0] $end
$var wire 16 0 RD_DATA [15:0] $end
$var wire 1 # RESET $end
$var reg 5 1 ADDR [4:0] $end
$var reg 16 2 DATA [15:0] $end
$var reg 1 ( MDIO_DONE $end
$var reg 1 ' MDIO_IN $end
$var reg 2 3 OP [1:0] $end
$var reg 5 4 PHYADDR [4:0] $end
$var reg 5 5 REGADDR [4:0] $end
$var reg 2 6 ST [1:0] $end
$var reg 2 7 TA [1:0] $end
$var reg 16 8 WR_DATA [15:0] $end
$var reg 1 ! WR_STB $end
$var reg 6 9 data_counter [5:0] $end
$var reg 1 : internal_rst $end
$var reg 4 ; state [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 ;
0:
b0 9
b0 8
b11 7
b1 6
b11111 5
b11111 4
b0 3
b1010101111001101 2
b0 1
b1101110010111010 0
b1001111111111111010101111001101 /
b1101110010111010 .
b1001111111111111010101111001101 -
b0 ,
b0 +
b0 *
0)
0(
0'
x&
b1001111111111111010101111001101 %
b1101110010111010 $
0#
b0 "
0!
$end
#5
1)
#10
0)
1&
1#
#15
b100 ;
b11111 *
b11111 ,
b11111 1
1)
#20
0)
#25
b1 9
1)
#30
0)
#35
b10 9
1)
#40
0)
#45
b11 9
1)
#50
0)
#55
b100 9
1)
#60
0)
#65
b101 9
1)
#70
0)
#75
b110 9
1)
#80
0)
#85
b111 9
1)
#90
0)
#95
b1000 9
1)
#100
0)
#105
b1001 9
1)
#110
0)
#115
b1010 9
1)
#120
0)
#125
b1011 9
1)
#130
0)
#135
b1100 9
1)
#140
0)
#145
b1101 9
1)
#150
0)
#155
b1110 9
1)
#160
0)
#165
b1111 9
1)
#170
0)
0&
#175
x'
b10000 9
1)
#180
0)
#185
1'
b10001 9
1)
#190
0)
#195
b10010 9
1)
#200
0)
#205
0'
b10011 9
1)
#210
0)
#215
1'
b10100 9
1)
#220
0)
#225
b10101 9
1)
#230
0)
#235
b10110 9
1)
#240
0)
#245
0'
b10111 9
1)
#250
0)
#255
b11000 9
1)
#260
0)
#265
1'
b11001 9
1)
#270
0)
#275
0'
b11010 9
1)
#280
0)
#285
1'
b11011 9
1)
#290
0)
#295
b11100 9
1)
#300
0)
#305
b11101 9
1)
#310
0)
#315
0'
b11110 9
1)
#320
0)
#325
1'
b11111 9
1)
#330
b0 9
b0 *
b0 ,
b0 1
0'
b0 "
b0 +
b0 8
b1 ;
0)
0#
#335
1)
#340
b0 "
b0 +
b0 8
b0 *
b0 ,
b0 1
b1 3
0)
b1011111111111111010101111001101 %
b1011111111111111010101111001101 -
b1011111111111111010101111001101 /
#345
1)
#350
0)
1&
1#
#355
b10 ;
b11111 *
b11111 ,
b11111 1
1)
#360
0)
#365
b1 9
b1000000000000000 "
b1000000000000000 +
b1000000000000000 8
1)
#370
0)
#375
b10 9
1)
#380
0)
#385
b11 9
b1010000000000000 "
b1010000000000000 +
b1010000000000000 8
1)
#390
0)
#395
b100 9
1)
#400
0)
#405
b101 9
b1010100000000000 "
b1010100000000000 +
b1010100000000000 8
1)
#410
0)
#415
b110 9
1)
#420
0)
#425
b111 9
b1010101000000000 "
b1010101000000000 +
b1010101000000000 8
1)
#430
0)
#435
b1000 9
b1010101100000000 "
b1010101100000000 +
b1010101100000000 8
1)
#440
0)
#445
b1001 9
b1010101110000000 "
b1010101110000000 +
b1010101110000000 8
1)
#450
0)
#455
b1010 9
b1010101111000000 "
b1010101111000000 +
b1010101111000000 8
1)
#460
0)
#465
b1011 9
1)
#470
0)
#475
b1100 9
1)
#480
0)
#485
b1101 9
b1010101111001000 "
b1010101111001000 +
b1010101111001000 8
1)
#490
0)
#495
b1110 9
b1010101111001100 "
b1010101111001100 +
b1010101111001100 8
1)
#500
0)
#505
b1111 9
1)
#510
0)
#515
b1000 ;
1(
1!
b10000 9
b1010101111001101 "
b1010101111001101 +
b1010101111001101 8
1)
#520
0)
#525
b0 9
b0 "
b0 +
b0 8
b0 *
b0 ,
b0 1
0:
b1 ;
0(
0!
1)
#530
0)
0&
#535
1)
#540
b0 "
b0 +
b0 8
b0 *
b0 ,
b0 1
0)
0#
#545
1)
#550
0)
#555
1)
#560
0)
#565
1)
#570
0)
#575
1)
#580
0)
#585
1)
#590
0)
#595
1)
#600
0)
#605
1)
#610
0)
#615
1)
#620
0)
#625
1)
#630
0)
#635
1)
#640
0)
